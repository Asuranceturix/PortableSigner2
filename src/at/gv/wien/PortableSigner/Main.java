/*
 * Main.java
 *
 * Created on 21. September 2006, 09:13
 */

package at.gv.wien.PortableSigner;

import javax.swing.JLabel;


/**
 *
 * @author  pfp@adv.magwien.gv.at
 */
public class Main extends javax.swing.JFrame {
    
    private static SignCommandLine mycommand;
    public String copyright = "Peter Pfl√§ging <peter.pflaeging@wien.gv.at>)";
    public String url = "http://portablesigner.sf.net/";
    private Preferences  prefs;
    private Version version = new Version();
    private static java.awt.Color resultcolor;
    private static String result, exceptionstring;
    String inputPDFFile = "", outputPDFFile = "", signatureP12File = "";
    String password = "";
    private static java.awt.Color colorok = new java.awt.Color(0, 240, 0);
    private static java.awt.Color colorerror = new java.awt.Color(240, 0, 0);
    
    
    /** Creates new form Main */
    public Main() {
        prefs = new Preferences();
        
//        System.out.println(prefs.lastInputFile + prefs.lastOutputFile + prefs.lastP12File);
        
        initComponents();
        if (mycommand.signature == null) {
            jTextFieldSignaturefile.setText(prefs.lastP12File);
        } else {
            jTextFieldSignaturefile.setText(mycommand.signature);
        }
        if (mycommand.input == null) {
            jTextFieldInputfile.setText(prefs.lastInputFile);
        } else {
            jTextFieldInputfile.setText(mycommand.input);
        }
        if (mycommand.output == null) {
            jTextFieldOutputfile.setText(generateOutputFile(jTextFieldInputfile.getText()));
        } else {
            jTextFieldOutputfile.setText(mycommand.output);
        }
        if (mycommand.password != null) {
            jPasswordFieldPassword.setText(mycommand.password);
        }
        if (mycommand.sigimage.equals("")) {
            jTextFieldOptionLogo.setText(prefs.sigLogo);
        } else {
            jTextFieldOptionLogo.setText(mycommand.sigimage);
        }
        if (!mycommand.sigblock.equals("")) {
            if (mycommand.sigblock.equals("german")) {
                jRadioButtonOptionGerman.setSelected(true);
            } 
            if (mycommand.sigblock.equals("english")) {
                jRadioButtonOptionEnglish.setSelected(true);
            }
            prefs.set("SignText", true);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jDialogCancel = new javax.swing.JDialog();
        jPanelCancel = new javax.swing.JPanel();
        jButtonCancelYes = new javax.swing.JButton();
        jButtonCancelNo = new javax.swing.JButton();
        jLabelCancelQuestion = new javax.swing.JLabel();
        jDialogAbout = new javax.swing.JDialog();
        jLabelAboutText = new javax.swing.JLabel();
        jButtonAboutOk = new javax.swing.JButton();
        jScrollPaneAboutVersion = new javax.swing.JScrollPane();
        jTextAreaAboutVersion = new javax.swing.JTextArea();
        jLabelAboutCopyright = new javax.swing.JLabel();
        jButtonLicense = new javax.swing.JButton();
        jDialogLicense = new javax.swing.JDialog();
        jButtonLicenseOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLicenseText = new javax.swing.JTextArea();
        jFrameOption = new javax.swing.JFrame();
        jButtonOptionSearchLogo = new javax.swing.JButton();
        jRadioButtonOptionEnglish = new javax.swing.JRadioButton();
        jRadioButtonOptionGerman = new javax.swing.JRadioButton();
        jLabelOptionLanguage = new javax.swing.JLabel();
        jTextFieldOptionLogo = new javax.swing.JTextField();
        jLabelOptionLogo = new javax.swing.JLabel();
        jButtonOptionOK = new javax.swing.JButton();
        jButtonResetLogo = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelInput = new javax.swing.JLabel();
        jLabelOutput = new javax.swing.JLabel();
        jLabelSignature = new javax.swing.JLabel();
        jTextFieldInputfile = new javax.swing.JTextField();
        jButtonInputfile = new javax.swing.JButton();
        jTextFieldOutputfile = new javax.swing.JTextField();
        jButtonOutputfile = new javax.swing.JButton();
        jTextFieldSignaturefile = new javax.swing.JTextField();
        jButtonSignaturefile = new javax.swing.JButton();
        jButtonCancelMain = new javax.swing.JButton();
        jButtonAbout = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jButtonPasswordOK = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelSign = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelWorking = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        jLabelResult = new javax.swing.JLabel();
        jLabelFinished = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelFinishNext = new javax.swing.JLabel();
        jCheckBoxSignatureBlock = new javax.swing.JCheckBox();
        jButtonOption = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jDialogCancel.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jDialogCancel.setAlwaysOnTop(true);
        jDialogCancel.setLocationByPlatform(true);
        jDialogCancel.setModal(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("at/gv/wien/PortableSigner/i18n"); // NOI18N
        jButtonCancelYes.setText(bundle.getString("Yes")); // NOI18N
        jButtonCancelYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelYesActionPerformed(evt);
            }
        });

        jButtonCancelNo.setText(bundle.getString("No")); // NOI18N
        jButtonCancelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelNoActionPerformed(evt);
            }
        });

        jLabelCancelQuestion.setText(bundle.getString("ReallyCancel")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanelCancelLayout = new org.jdesktop.layout.GroupLayout(jPanelCancel);
        jPanelCancel.setLayout(jPanelCancelLayout);
        jPanelCancelLayout.setHorizontalGroup(
            jPanelCancelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelCancelLayout.createSequentialGroup()
                .add(jPanelCancelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelCancelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jButtonCancelYes)
                        .add(5, 5, 5)
                        .add(jButtonCancelNo))
                    .add(jPanelCancelLayout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jLabelCancelQuestion)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanelCancelLayout.setVerticalGroup(
            jPanelCancelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelCancelLayout.createSequentialGroup()
                .add(8, 8, 8)
                .add(jLabelCancelQuestion)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelCancelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancelNo)
                    .add(jButtonCancelYes)))
        );
        jDialogCancel.getContentPane().add(jPanelCancel);

        jDialogAbout.setLocationByPlatform(true);
        jDialogAbout.setResizable(false);
        jLabelAboutText.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        jLabelAboutText.setText("PortableSigner " + Version.release);

        jButtonAboutOk.setText(bundle.getString("OK")); // NOI18N
        jButtonAboutOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutOkActionPerformed(evt);
            }
        });

        jTextAreaAboutVersion.setColumns(20);
        jTextAreaAboutVersion.setRows(5);
        jScrollPaneAboutVersion.setViewportView(jTextAreaAboutVersion);

        jLabelAboutCopyright.setText("(c) Stadt Wien");

        jButtonLicense.setText(bundle.getString("LicenseButton")); // NOI18N
        jButtonLicense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLicenseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jDialogAboutLayout = new org.jdesktop.layout.GroupLayout(jDialogAbout.getContentPane());
        jDialogAbout.getContentPane().setLayout(jDialogAboutLayout);
        jDialogAboutLayout.setHorizontalGroup(
            jDialogAboutLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialogAboutLayout.createSequentialGroup()
                .add(jDialogAboutLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialogAboutLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jDialogAboutLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPaneAboutVersion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jDialogAboutLayout.createSequentialGroup()
                                .add(jLabelAboutCopyright)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 137, Short.MAX_VALUE)
                                .add(jButtonLicense)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonAboutOk))))
                    .add(jDialogAboutLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabelAboutText)))
                .addContainerGap())
        );
        jDialogAboutLayout.setVerticalGroup(
            jDialogAboutLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelAboutText)
                .add(14, 14, 14)
                .add(jScrollPaneAboutVersion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialogAboutLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonAboutOk)
                    .add(jLabelAboutCopyright)
                    .add(jButtonLicense))
                .addContainerGap())
        );
        jButtonLicenseOK.setText("OK");
        jButtonLicenseOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLicenseOKActionPerformed(evt);
            }
        });

        jTextAreaLicenseText.setColumns(20);
        jTextAreaLicenseText.setRows(5);
        jTextAreaLicenseText.setText(bundle.getString("LicenseText")); // NOI18N
        jScrollPane1.setViewportView(jTextAreaLicenseText);

        org.jdesktop.layout.GroupLayout jDialogLicenseLayout = new org.jdesktop.layout.GroupLayout(jDialogLicense.getContentPane());
        jDialogLicense.getContentPane().setLayout(jDialogLicenseLayout);
        jDialogLicenseLayout.setHorizontalGroup(
            jDialogLicenseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialogLicenseLayout.createSequentialGroup()
                .addContainerGap()
                .add(jDialogLicenseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonLicenseOK)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialogLicenseLayout.setVerticalGroup(
            jDialogLicenseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialogLicenseLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButtonLicenseOK)
                .addContainerGap())
        );
        jFrameOption.setTitle("PortableSigner: Options");
        jFrameOption.setAlwaysOnTop(true);
        jButtonOptionSearchLogo.setText(bundle.getString("SearchButton")); // NOI18N
        jButtonOptionSearchLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptionSearchLogoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOptionEnglish);
        jRadioButtonOptionEnglish.setText(bundle.getString("EnglishButton")); // NOI18N
        jRadioButtonOptionEnglish.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButtonOptionEnglish.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButtonOptionEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionEnglishActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOptionGerman);
        jRadioButtonOptionGerman.setText(bundle.getString("GermanButton")); // NOI18N
        jRadioButtonOptionGerman.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButtonOptionGerman.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButtonOptionGerman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOptionGermanActionPerformed(evt);
            }
        });

        jLabelOptionLanguage.setText(bundle.getString("LanguageOfSignatureBlock")); // NOI18N

        jLabelOptionLogo.setText(bundle.getString("SignatureLogo")); // NOI18N

        jButtonOptionOK.setText(bundle.getString("OK")); // NOI18N
        jButtonOptionOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptionOKActionPerformed(evt);
            }
        });

        jButtonResetLogo.setText(bundle.getString("ResetLogo")); // NOI18N
        jButtonResetLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetLogoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jFrameOptionLayout = new org.jdesktop.layout.GroupLayout(jFrameOption.getContentPane());
        jFrameOption.getContentPane().setLayout(jFrameOptionLayout);
        jFrameOptionLayout.setHorizontalGroup(
            jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrameOptionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jFrameOptionLayout.createSequentialGroup()
                        .add(jLabelOptionLanguage)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 36, Short.MAX_VALUE)
                        .add(jRadioButtonOptionEnglish)
                        .add(11, 11, 11)
                        .add(jRadioButtonOptionGerman))
                    .add(jFrameOptionLayout.createSequentialGroup()
                        .add(jLabelOptionLogo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jFrameOptionLayout.createSequentialGroup()
                                .add(jButtonResetLogo)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 114, Short.MAX_VALUE)
                                .add(jButtonOptionOK))
                            .add(jFrameOptionLayout.createSequentialGroup()
                                .add(jTextFieldOptionLogo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonOptionSearchLogo)))))
                .addContainerGap())
        );
        jFrameOptionLayout.setVerticalGroup(
            jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrameOptionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jRadioButtonOptionGerman)
                        .add(jRadioButtonOptionEnglish))
                    .add(jLabelOptionLanguage))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelOptionLogo)
                    .add(jTextFieldOptionLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonOptionSearchLogo))
                .add(jFrameOptionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jFrameOptionLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 48, Short.MAX_VALUE)
                        .add(jButtonOptionOK)
                        .addContainerGap())
                    .add(jFrameOptionLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonResetLogo)
                        .addContainerGap())))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PortableSigner");
        setLocationByPlatform(true);
        jLabelInput.setText(bundle.getString("InputLabel")); // NOI18N

        jLabelOutput.setText(bundle.getString("OutputLabel")); // NOI18N

        jLabelSignature.setText(bundle.getString("SignatureLabel")); // NOI18N

        jButtonInputfile.setText(bundle.getString("SearchButton")); // NOI18N
        jButtonInputfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInputfileActionPerformed(evt);
            }
        });

        jButtonOutputfile.setText(bundle.getString("SearchButton")); // NOI18N
        jButtonOutputfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputfileActionPerformed(evt);
            }
        });

        jButtonSignaturefile.setText(bundle.getString("SearchButton")); // NOI18N
        jButtonSignaturefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignaturefileActionPerformed(evt);
            }
        });

        jButtonCancelMain.setText(bundle.getString("CancelButton")); // NOI18N
        jButtonCancelMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelMainActionPerformed(evt);
            }
        });

        jButtonAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/at/gv/wien/PortableSigner/PortableSignerLogo-small.png")));
        jButtonAbout.setText(bundle.getString("AboutButton")); // NOI18N
        jButtonAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutActionPerformed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Lucida Grande", 3, 14));
        jLabelTitle.setText(bundle.getString("SignPDF")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel1.setText("1.");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel2.setText("2.");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel3.setText("3.");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel4.setText("4.");

        jLabelPassword.setText(bundle.getString("PasswordLabel")); // NOI18N

        jPasswordFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldPasswordActionPerformed(evt);
            }
        });

        jButtonPasswordOK.setText(bundle.getString("OK")); // NOI18N
        jButtonPasswordOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasswordOKActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel5.setText("5.");

        jLabelSign.setText(bundle.getString("Sign")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel6.setText("6.");

        jLabelWorking.setText(bundle.getString("Working")); // NOI18N

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel7.setText("7.");

        jLabelResult.setText(bundle.getString("Result")); // NOI18N

        jLabelFinished.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelFinished.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelFinished.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel8.setText("8.");

        jLabel9.setText(bundle.getString("Restart")); // NOI18N

        jLabelFinishNext.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabelFinishNext.setText(bundle.getString("Goto_1")); // NOI18N

        jCheckBoxSignatureBlock.setSelected(prefs.signText);
        jCheckBoxSignatureBlock.setText(bundle.getString("SignatureBlockLabel")); // NOI18N
        jCheckBoxSignatureBlock.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxSignatureBlock.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSignatureBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSignatureBlockActionPerformed(evt);
            }
        });

        jButtonOption.setText(bundle.getString("OptionsButton")); // NOI18N
        jButtonOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptionActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 3, 13));
        jLabel10.setText("9.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabelTitle)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 242, Short.MAX_VALUE)
                        .add(jButtonAbout))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelInput))
                            .add(layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelOutput))
                            .add(layout.createSequentialGroup()
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelSignature))
                            .add(jLabel4)
                            .add(layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelPassword))
                            .add(layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelSign))
                            .add(layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelWorking))
                            .add(layout.createSequentialGroup()
                                .add(jLabel10)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel9))
                            .add(layout.createSequentialGroup()
                                .add(jLabel8)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabelResult)))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelFinished, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabelFinishNext)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 241, Short.MAX_VALUE)
                                .add(jButtonCancelMain))
                            .add(jButtonPasswordOK)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(jTextFieldOutputfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                                    .add(layout.createSequentialGroup()
                                        .add(jCheckBoxSignatureBlock)
                                        .add(128, 128, 128))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPasswordFieldPassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                            .add(jTextFieldSignaturefile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                                    .add(jTextFieldInputfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonInputfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonOutputfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonSignaturefile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonOption, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelTitle)
                    .add(jButtonAbout))
                .add(18, 18, 18)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelInput)
                    .add(jTextFieldInputfile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(jButtonInputfile))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelOutput)
                    .add(jTextFieldOutputfile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(jButtonOutputfile))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelSignature)
                    .add(jTextFieldSignaturefile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jButtonSignaturefile))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jCheckBoxSignatureBlock)
                    .add(jButtonOption))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jPasswordFieldPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelPassword)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonPasswordOK)
                    .add(jLabelSign)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(jLabelWorking)
                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelResult)
                        .add(jLabelFinished, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButtonCancelMain)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelFinishNext)
                        .add(jLabel10)
                        .add(jLabel9)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonResetLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetLogoActionPerformed
        jTextFieldOptionLogo.setText("");
    }//GEN-LAST:event_jButtonResetLogoActionPerformed

    private void jButtonOptionSearchLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptionSearchLogoActionPerformed
        jFrameOption.setAlwaysOnTop(false);
        String file = chooseImageFile();
        // do nothing if open dialog was cancelled
        if (file == null) {
            jFrameOption.setAlwaysOnTop(true);
            return;
        }
        jTextFieldOptionLogo.setText(file);
//        System.out.println(file);
        jFrameOption.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButtonOptionSearchLogoActionPerformed

    private void jRadioButtonOptionGermanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionGermanActionPerformed
        prefs.set("SignLanguage", "german");
    }//GEN-LAST:event_jRadioButtonOptionGermanActionPerformed

    private void jRadioButtonOptionEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOptionEnglishActionPerformed
        prefs.set("SignLanguage", "english");
    }//GEN-LAST:event_jRadioButtonOptionEnglishActionPerformed

    private void jButtonOptionOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptionOKActionPerformed
        prefs.set("SignatureLogo",jTextFieldOptionLogo.getText());
        // System.out.println("SigLogo: " + prefs.sigLogo );
        jFrameOption.setVisible(false);
    }//GEN-LAST:event_jButtonOptionOKActionPerformed

    private void jButtonOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptionActionPerformed
        
        jFrameOption.setSize(450,180);
        String lang = prefs.signLanguage;
        // System.out.println(lang);
        if (lang.equals("german")) {
            jRadioButtonOptionGerman.setSelected(true);
        } 
        if (lang.equals("english")) {
            jRadioButtonOptionEnglish.setSelected(true);
        }
        jFrameOption.setVisible(true);
    }//GEN-LAST:event_jButtonOptionActionPerformed

    private void jCheckBoxSignatureBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSignatureBlockActionPerformed
        prefs.set("SignText", !prefs.signText);
        // System.out.println(prefs.signText);
    }//GEN-LAST:event_jCheckBoxSignatureBlockActionPerformed

    private void jPasswordFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldPasswordActionPerformed
        jButtonPasswordOKActionPerformed(evt);
    }//GEN-LAST:event_jPasswordFieldPasswordActionPerformed

    private void jButtonLicenseOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLicenseOKActionPerformed
        jDialogLicense.setVisible(false);        
    }//GEN-LAST:event_jButtonLicenseOKActionPerformed

    private void jButtonLicenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLicenseActionPerformed
        jDialogLicense.setVisible(true);
        jDialogLicense.setSize(450,450);
    }//GEN-LAST:event_jButtonLicenseActionPerformed
    
    private void jButtonPasswordOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasswordOKActionPerformed
        // DoSign Sign;
        
        
        jProgressBar1.setIndeterminate(true);
        jLabelFinished.setText("");
        jLabelFinished.setForeground(new java.awt.Color(0,0,0));
        //String inputPDFFile = "", outputPDFFile = "", signatureP12File = "";
        //String password = "";
        password = String.valueOf(jPasswordFieldPassword.getPassword());
        inputPDFFile = jTextFieldInputfile.getText();
        outputPDFFile = jTextFieldOutputfile.getText();
        signatureP12File = jTextFieldSignaturefile.getText();
        if (inputPDFFile == null || outputPDFFile == null || signatureP12File == null) {
            return;
        }
        
        prefs.set("LastInputFile", inputPDFFile);
        // prefs.set("LastOutputFile", outputPDFFile);
        prefs.set("LastP12File", signatureP12File);
        result = null;
        exceptionstring = null;
        
        // create Thread for signing
        Runnable runnable = new Runnable() {
            public void run() {
                new DoSignPDF(inputPDFFile,
                        outputPDFFile,
                        signatureP12File,
                        password,
                        prefs.signText,
                        prefs.signLanguage,
                        prefs.sigLogo);
                jProgressBar1.setIndeterminate(false);
                jProgressBar1.setValue(100);
                //getParent().setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.DEFAULT_CURSOR));
                jLabelFinished.setForeground(resultcolor);
                jLabelFinished.setToolTipText(exceptionstring);
                jLabelFinished.setText(result);
            }
        };
        
        
        Thread thread = new Thread(runnable);
        thread.start();
        
    }//GEN-LAST:event_jButtonPasswordOKActionPerformed
    
    private void jButtonAboutOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutOkActionPerformed
        jDialogAbout.setVisible(false);
    }//GEN-LAST:event_jButtonAboutOkActionPerformed
    
    private void jButtonAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutActionPerformed
        jTextAreaAboutVersion.setText(
                copyright + "\n" + url + "\n\n" +
                version.print);
        jDialogAbout.setSize(500,250);
        jDialogAbout.setVisible(true);
    }//GEN-LAST:event_jButtonAboutActionPerformed
    
    private void jButtonCancelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelNoActionPerformed
        jDialogCancel.setVisible(false);
    }//GEN-LAST:event_jButtonCancelNoActionPerformed
    
    private void jButtonCancelYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelYesActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jButtonCancelYesActionPerformed
    
    private void jButtonCancelMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelMainActionPerformed
        jDialogCancel.setSize(200, 100);
        jDialogCancel.setVisible(true);
    }//GEN-LAST:event_jButtonCancelMainActionPerformed
    
    private void jButtonSignaturefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignaturefileActionPerformed
        String file = chooseP12File();
        // do nothing if open dialog was cancelled
        if (file == null) {
            return;
        }
        jTextFieldSignaturefile.setText(file);
//        System.out.println(file);
    }//GEN-LAST:event_jButtonSignaturefileActionPerformed
    
    private void jButtonOutputfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputfileActionPerformed
        String file = choosePDFFileSave();
        // do nothing if open dialog was cancelled
        if (file == null) {
            return;
        }
        jTextFieldOutputfile.setText(file);
//        System.out.println(file);
    }//GEN-LAST:event_jButtonOutputfileActionPerformed
    
    private void jButtonInputfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInputfileActionPerformed
        String file = choosePDFFile();
        // do nothing if open dialog was cancelled
        if (file == null) {
            return;
        }
        // System.out.println("output: " + generateOutputFile(file));
        jTextFieldOutputfile.setText(generateOutputFile(file));
        jTextFieldInputfile.setText(file);
    }//GEN-LAST:event_jButtonInputfileActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        //       java.util.Locale Language;
        
        mycommand = new SignCommandLine(args);
        
        if (mycommand.nogui) {
            new DoSignPDF(mycommand.input,
                    mycommand.output,
                    mycommand.signature,
                    mycommand.password,
                    !mycommand.sigblock.equals(""),
                    mycommand.sigblock,
                    mycommand.sigimage);
            System.exit(0);
        } else {
            
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Main().setVisible(true);
                }
            });
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAbout;
    private javax.swing.JButton jButtonAboutOk;
    private javax.swing.JButton jButtonCancelMain;
    private javax.swing.JButton jButtonCancelNo;
    private javax.swing.JButton jButtonCancelYes;
    private javax.swing.JButton jButtonInputfile;
    private javax.swing.JButton jButtonLicense;
    private javax.swing.JButton jButtonLicenseOK;
    private javax.swing.JButton jButtonOption;
    private javax.swing.JButton jButtonOptionOK;
    private javax.swing.JButton jButtonOptionSearchLogo;
    private javax.swing.JButton jButtonOutputfile;
    private javax.swing.JButton jButtonPasswordOK;
    private javax.swing.JButton jButtonResetLogo;
    private javax.swing.JButton jButtonSignaturefile;
    private javax.swing.JCheckBox jCheckBoxSignatureBlock;
    private javax.swing.JDialog jDialogAbout;
    private javax.swing.JDialog jDialogCancel;
    private javax.swing.JDialog jDialogLicense;
    private javax.swing.JFrame jFrameOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAboutCopyright;
    private javax.swing.JLabel jLabelAboutText;
    private javax.swing.JLabel jLabelCancelQuestion;
    private javax.swing.JLabel jLabelFinishNext;
    private javax.swing.JLabel jLabelFinished;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelOptionLanguage;
    private javax.swing.JLabel jLabelOptionLogo;
    private javax.swing.JLabel jLabelOutput;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelResult;
    private javax.swing.JLabel jLabelSign;
    private javax.swing.JLabel jLabelSignature;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelWorking;
    private javax.swing.JPanel jPanelCancel;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButtonOptionEnglish;
    private javax.swing.JRadioButton jRadioButtonOptionGerman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneAboutVersion;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaAboutVersion;
    private javax.swing.JTextArea jTextAreaLicenseText;
    private javax.swing.JTextField jTextFieldInputfile;
    private javax.swing.JTextField jTextFieldOptionLogo;
    private javax.swing.JTextField jTextFieldOutputfile;
    private javax.swing.JTextField jTextFieldSignaturefile;
    // End of variables declaration//GEN-END:variables

    
    private String generateOutputFile(String inputFile) {
        // generating filename by appending -sig to filename:
        // /i/am/here.pdf becomes /i/am/here-sig.pdf
        if (inputFile.equals("")) { return ""; }
        return inputFile.substring(0,inputFile.lastIndexOf(".pdf")) + "-sig.pdf";
    }
    
    private String getDir (String absFile) {
        // get Dir component from file as string
        if (absFile.equals("")) { return ""; }
        java.io.File myfile = new java.io.File(absFile);
        return myfile.getParent();
    }
    
    /** Opens dialog for user to choose an PDF file to open and read.
     *
     * @return PDF file or null if user cancelled the dialog
     */
    private String choosePDFFile() {
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(getDir(prefs.lastInputFile));
        chooser.setFileFilter(new PDFFilter());
        
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getAbsolutePath();
        }
        // cancel was clicked
        return null;
    }
    
    /** Save dialog for user to choose an PDF file to save.
     *
     * @return PDF file or null if user cancelled the dialog
     */
    private String choosePDFFileSave() {
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(getDir(jTextFieldOutputfile.getText()));
        chooser.setFileFilter(new PDFFilter());
        
        int returnVal = chooser.showSaveDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getAbsolutePath();
        }
        // cancel was clicked
        return null;
    }
    
    /** Opens dialog for user to choose an P12 file to open and read.
     *
     * @return P12 file or null if user cancelled the dialog
     */
    private String chooseP12File() {
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(getDir(prefs.lastP12File));
        chooser.setFileFilter(new P12Filter());
        
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getAbsolutePath();
        }
        // cancel was clicked
        return null;
    }

    /** Opens dialog for user to choose an image file to open and read.
     *
     * @return image file or null if user cancelled the dialog
     */
    private String chooseImageFile() {
        String imagefile;
        if (jTextFieldOptionLogo.getText().equals("")) {
            imagefile = prefs.sigLogo; 
        } else {
            imagefile = jTextFieldOptionLogo.getText();
        }    
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser(getDir(imagefile));
        chooser.setFileFilter(new ImageFilter());
        
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile().getAbsolutePath();
        }
        // cancel was clicked
        return null;
    }

    /** Filter which accepts only PDF files */
    private static class PDFFilter extends javax.swing.filechooser.FileFilter {
        public boolean accept(java.io.File f) {
            return f.isDirectory() || f.getName().endsWith(".pdf");
        }
        
        public String getDescription() {
            return java.util.ResourceBundle.getBundle("at/gv/wien/PortableSigner/i18n").getString("PDFDescription");
        }
    }
    
    /** Filter which accepts only P12 files */
    private static class P12Filter extends javax.swing.filechooser.FileFilter {
        public boolean accept(java.io.File f) {
            return f.isDirectory() || f.getName().endsWith(".p12");
        }
        
        public String getDescription() {
            return java.util.ResourceBundle.getBundle("at/gv/wien/PortableSigner/i18n").getString("PKCS12Description");
        }
    }

    private static class ImageFilter extends javax.swing.filechooser.FileFilter {
        public boolean accept(java.io.File f) {
            return f.isDirectory() || f.getName().endsWith(".gif") || 
                    f.getName().endsWith(".png") || f.getName().endsWith(".jpg");
        }
        
        public String getDescription() {
            return java.util.ResourceBundle.getBundle("at/gv/wien/PortableSigner/i18n").getString("ImageDescription");
        }
    }
    
    
    
    
    public static void setResult(String resultText, Boolean errorState, String errorString) {
        if (errorState) {
            resultcolor = colorerror;
            if (exceptionstring == null) {
                exceptionstring = errorString;
            }
            System.err.println(resultText  + "\n\t" + exceptionstring);
        } else {
            resultcolor = colorok;
            exceptionstring = null;
        }
        if (result == null) {
            result = resultText;
        }
    }
}
